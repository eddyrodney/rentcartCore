// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentCar.DAL;

namespace RentCar.Migrations
{
    [DbContext(typeof(RentCarDbContext))]
    [Migration("20190928171239_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentCar.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula");

                    b.Property<bool>("Estado");

                    b.Property<float>("LimiteCredito");

                    b.Property<string>("NoTarjetaCredito");

                    b.Property<string>("Nombre");

                    b.Property<string>("TipoPersona");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RentCar.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula");

                    b.Property<bool>("Estado");

                    b.Property<DateTime?>("FechaIngreso");

                    b.Property<string>("Nombre");

                    b.Property<float>("PorcientoComision");

                    b.Property<string>("TandaLabor");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("RentCar.Models.Inspeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CantidadCombustible");

                    b.Property<bool>("Estado");

                    b.Property<DateTime>("Fecha");

                    b.Property<bool>("Gato");

                    b.Property<bool>("GomaRepuesta");

                    b.Property<bool>("GomaSupDerecha");

                    b.Property<bool>("GomaSupIzquierda");

                    b.Property<bool>("GomaTraseraDerecha");

                    b.Property<bool>("GomaTraseraIzquierda");

                    b.Property<int>("IdRenta");

                    b.Property<bool>("Ralladuras");

                    b.Property<int?>("RentaId");

                    b.Property<bool>("RoturaCristal");

                    b.HasKey("Id");

                    b.HasIndex("RentaId");

                    b.ToTable("Inspecciones");
                });

            modelBuilder.Entity("RentCar.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("RentCar.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<int>("MarcaId");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("RentCar.Models.Renta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadDia");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Comentario");

                    b.Property<int>("EmpleadoId");

                    b.Property<bool>("Estado");

                    b.Property<DateTime>("FechaDevolucion");

                    b.Property<DateTime>("FechaRenta");

                    b.Property<float>("MontoXDia");

                    b.Property<int>("NoRenta");

                    b.Property<int>("VehiculoId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Rentas");
                });

            modelBuilder.Entity("RentCar.Models.TipoCombustible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.HasKey("Id");

                    b.ToTable("TiposCombustibles");
                });

            modelBuilder.Entity("RentCar.Models.TipoVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.HasKey("Id");

                    b.ToTable("TiposVehiculos");
                });

            modelBuilder.Entity("RentCar.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<int>("MarcaId");

                    b.Property<string>("NoChasis");

                    b.Property<string>("NoMotor");

                    b.Property<string>("NoPlaca");

                    b.Property<int>("TipoCombustibleId");

                    b.Property<int>("TipoVehiculoId");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TipoCombustibleId");

                    b.HasIndex("TipoVehiculoId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("RentCar.Models.Inspeccion", b =>
                {
                    b.HasOne("RentCar.Models.Renta", "Renta")
                        .WithMany()
                        .HasForeignKey("RentaId");
                });

            modelBuilder.Entity("RentCar.Models.Modelo", b =>
                {
                    b.HasOne("RentCar.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentCar.Models.Renta", b =>
                {
                    b.HasOne("RentCar.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RentCar.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RentCar.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentCar.Models.Vehiculo", b =>
                {
                    b.HasOne("RentCar.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RentCar.Models.TipoCombustible", "TipoCombustible")
                        .WithMany()
                        .HasForeignKey("TipoCombustibleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RentCar.Models.TipoVehiculo", "TipoVehiculo")
                        .WithMany()
                        .HasForeignKey("TipoVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
